-------------------------장바구니 기능 구현 DB-----------------------------


-- 제품 테이블 생성
create table wmk_goods (
    gdsNum       number          not null,
    gdsName      varchar2(50)    not null,
    cateCode     varchar2(30)    not null,
    gdsPrice     number          not null,
    gdsStock     number          null,
    gdsDes       varchar(500)    null,
    gdsImg       varchar(200)    null,
    gdsDate      date            default sysdate,
    primary key(gdsNum)  
);

create sequence wmk_goods_seq;


--제품 등록

insert into wmk_goods (gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg) 
values (wmk_goods_seq.nextval, 'Picture frame', 101, 30000, 50, '나만의 홈인테리어를 꾸며줄 작은 데코레이션', 'goods/frame_550.png');

insert into wmk_goods (gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg) 
values (wmk_goods_seq.nextval, 'T-shirts', 201, 15000, 50, '스타일과 편안함을 모두 갖춘 프리미엄 원단 100% 티셔츠', 'goods/white_shirts_550.png');

insert into wmk_goods (gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg) 
values (wmk_goods_seq.nextval, 'Mug-cup', 301, 8000, 50, '모던하고 세련된 스타일의 나만을 위한 시그니처 아이템', 'goods/mug_cup_550.png');

--제품 카테고리 생성
create table goods_category (
    cateName varchar2(20) not null,
    cateCode varchar2(30) not null,
    cateCodeRef varchar(30) null,
    primary key(cateCode),
    foreign key(cateCodeRef) references goods_category(cateCode)
);


--제품 카테고리 등록

insert into goods_category (cateName, cateCode) values ('액자', '100');
insert into goods_category (cateName, cateCode, cateCodeRef) values ('액자1-1', '101', '100');

insert into goods_category (cateName, cateCode) values ('티셔츠', '200');
insert into goods_category (cateName, cateCode, cateCodeRef) values ('티셔츠1-1', '201', '200');
insert into goods_category (cateName, cateCode, cateCodeRef) values ('티셔츠1-2', '202', '200');

insert into goods_category (cateName, cateCode) values ('머그컵', '300');
insert into goods_category (cateName, cateCode, cateCodeRef) values ('머그컵1-1', '301', '300');

--제품 카테고리 조회
select level, cateName, cateCode, cateCodeRef from goods_category
    start with cateCodeRef is null connect by prior cateCode = cateCodeRef;
    

--장바구니 생성
create table wmk_cart (
    cartNum     number          not null,
    userId      varchar2(50)    not null,
    gdsNum      number          not null,
    gdsColor    varchar2(50)    null,
    gdsSize     varchar2(50)    null,
    gdsText     varchar2(50)    null,
    cartStock   number          not null,
    addDate     date            default sysdate,
    primary key(cartNum, userId) 
);

create sequence wmk_cart_seq;

--우리 계정 아이디를 장바구니 에서 외래키로 받기
alter table wmk_cart
    add constraint wmk_cart_userId foreign key(userId)
    references wmk_users(ID);

--상품 번호를 장바구니에서 외래키로 받기
alter table wmk_cart
    add constraint wmk_cart_gdsNum foreign key(gdsNum)
    references wmk_goods(gdsNum);

--특정 회원의 장바구니 조회하기
select
    row_number() over(order by c.cartNum desc) as num,
    c.cartNum, c.userId, c.gdsNum, c.cartStock, c.addDate, c.gdsColor, c.gdsSize, c.gdsText,
    g.gdsName, g.gdsPrice, g.gdsimg
from wmk_cart c
    inner join wmk_goods g
        on c.gdsNum = g.gdsNum
    where c.userId = 'abcde';
    
    
commit;



-----------------주문하기 및 주문내역 확인하기 DB---------------------------

--주문 테이블
create table wmk_order (
    orderId     varchar2(50) not null,
    userId      varchar2(50) not null,
    orderRec    varchar2(50) not null,
    userAddr1   varchar2(20) not null,
    userAddr2   varchar2(50) not null,
    userAddr3   varchar2(50) not null,
    orderPhon   varchar2(30) not null,
    amount      number       not null,
    orderDate   Date         default sysdate,   
    primary key(orderId)
);


--주문테이블과 회원 id의 외래키 설정
alter table wmk_order
    add constraint wmk_order_userId foreign key(userId)
    references wmk_users(Id);
    
    
--주문 상세테이블  
create table wmk_order_details (
    orderDetailsNum number       not null,
    orderId         varchar2(50) not null,
    gdsNum          number          not null,
    cartStock       number          not null,
    primary key(orderDetailsNum)
);

--주문 상세 번호(orderDetailsNum)로 이용될 시퀀스
create sequence wmk_order_details_seq;

--주문 상세 테이블과 주문테이블의 참조 설정
alter table wmk_order_details
    add constraint wmk_order_details_orderId foreign key(orderId)
    references wmk_order(orderId);
    
--주문 정보 확인
select
o.orderId, o.userId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount,
d.orderDetailsNum, d.gdsNum, d.cartStock
from wmk_order o
    inner join wmk_order_details d
        on o.orderId = d.orderId
    where userId = 'abcde';







